"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n  \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n  <head>\n    <title>UnboundLocalError: local variable 'summary' referenced before assignment // Werkzeug Debugger</title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\"\n        type=\"text/css\">\n    <!-- We need to make sure this has a favicon so that the debugger does\n         not by accident trigger a request to /favicon.ico which might\n         change the application state. -->\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js\"></script>\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script>\n    <script type=\"text/javascript\">\n      var TRACEBACK = 43085456,\n          CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"DYrj9rcpDVcoN8BpYW7t\";\n    </script>\n  </head>\n  <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>UnboundLocalError</h1>\n<div class=\"detail\">\n  <p class=\"errormsg\">UnboundLocalError: local variable 'summary' referenced before assignment</p>\n</div>\n<h2 class=\"traceback\">Traceback <em>(most recent call last)</em></h2>\n<div class=\"traceback\">\n  \n  <ul><li><div class=\"frame\" id=\"frame-43085712\">\n  <h4>File <cite class=\"filename\">\"/usr/lib64/python2.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1997</em>,\n      in <code class=\"function\">__call__</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">                </span>error = None</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>ctx.auto_pop(error)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def __call__(self, environ, start_response):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&quot;&quot;&quot;Shortcut for :attr:`wsgi_app`.&quot;&quot;&quot;</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def __repr__(self):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return '&lt;%s %r&gt;' % (</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>self.__class__.__name__,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>self.name,</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-43085392\">\n  <h4>File <cite class=\"filename\">\"/usr/lib64/python2.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1985</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>except Exception as e:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>error = e</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>raise</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>return response(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-140430041647504\">\n  <h4>File <cite class=\"filename\">\"/usr/lib/python2.7/site-packages/flask_restful/__init__.py\"</cite>,\n      line <em class=\"line\">273</em>,\n      in <code class=\"function\">error_router</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">        </span>if self._has_fr_route():</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>return self.handle_error(e)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>except Exception:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>pass  # Fall through to original handler</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return original_handler(e)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def handle_error(self, e):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>&quot;&quot;&quot;Error handler for the API transforms a raised exception into a Flask</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>response, with the appropriate HTTP status code and body.</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-42914896\">\n  <h4>File <cite class=\"filename\">\"/usr/lib64/python2.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1540</em>,\n      in <code class=\"function\">handle_exception</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">            </span># if we want to repropagate the exception, we can attempt to</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># raise it with the whole traceback in case we can do that</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># (the function was actually called from the except part)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># otherwise, we just raise the error again</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if exc_value is e:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>reraise(exc_type, exc_value, tb)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>else:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>raise e</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>self.log_exception((exc_type, exc_value, tb))</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>if handler is None:</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-42914960\">\n  <h4>File <cite class=\"filename\">\"/usr/lib/python2.7/site-packages/flask_restful/__init__.py\"</cite>,\n      line <em class=\"line\">270</em>,\n      in <code class=\"function\">error_router</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">        </span>:type e: Exception</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&quot;&quot;&quot;</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>if self._has_fr_route():</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>return self.handle_error(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except Exception:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>pass  # Fall through to original handler</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return original_handler(e)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def handle_error(self, e):</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-43322704\">\n  <h4>File <cite class=\"filename\">\"/usr/lib64/python2.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1982</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">        </span>ctx = self.request_context(environ)</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>ctx.push()</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>error = None</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except Exception as e:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = e</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-43322320\">\n  <h4>File <cite class=\"filename\">\"/usr/lib64/python2.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1614</em>,\n      in <code class=\"function\">full_dispatch_request</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>except Exception as e:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(self, rv, from_error_handler=False):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>&quot;&quot;&quot;Given the return value from a view function this finalizes</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>the request by converting it into a response and invoking the</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-43516112\">\n  <h4>File <cite class=\"filename\">\"/usr/lib/python2.7/site-packages/flask_restful/__init__.py\"</cite>,\n      line <em class=\"line\">273</em>,\n      in <code class=\"function\">error_router</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">        </span>if self._has_fr_route():</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>return self.handle_error(e)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>except Exception:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>pass  # Fall through to original handler</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return original_handler(e)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def handle_error(self, e):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>&quot;&quot;&quot;Error handler for the API transforms a raised exception into a Flask</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>response, with the appropriate HTTP status code and body.</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-43516624\">\n  <h4>File <cite class=\"filename\">\"/usr/lib64/python2.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1517</em>,\n      in <code class=\"function\">handle_user_exception</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">            </span>return self.handle_http_exception(e)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>handler = self._find_error_handler(e)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>if handler is None:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>reraise(exc_type, exc_value, tb)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return handler(e)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def handle_exception(self, e):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>&quot;&quot;&quot;Default exception handling that kicks in when an exception</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>occurs that is not caught.  In debug mode the exception will</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-43516752\">\n  <h4>File <cite class=\"filename\">\"/usr/lib/python2.7/site-packages/flask_restful/__init__.py\"</cite>,\n      line <em class=\"line\">270</em>,\n      in <code class=\"function\">error_router</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">        </span>:type e: Exception</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&quot;&quot;&quot;</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>if self._has_fr_route():</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>return self.handle_error(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except Exception:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>pass  # Fall through to original handler</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return original_handler(e)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def handle_error(self, e):</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-43516048\">\n  <h4>File <cite class=\"filename\">\"/usr/lib64/python2.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1612</em>,\n      in <code class=\"function\">full_dispatch_request</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">        </span>self.try_trigger_before_first_request_functions()</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>except Exception as e:</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-43516176\">\n  <h4>File <cite class=\"filename\">\"/usr/lib64/python2.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1598</em>,\n      in <code class=\"function\">dispatch_request</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">        </span># request came with the OPTIONS method, reply automatically</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>if getattr(rule, 'provide_automatic_options', False) \\</pre>\n<pre class=\"line before\"><span class=\"ws\">           </span>and req.method == 'OPTIONS':</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>return self.make_default_options_response()</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span># otherwise dispatch to the handler for that endpoint</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def full_dispatch_request(self):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>pre and postprocessing as well as HTTP exception catching and</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>error handling.</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-43516816\">\n  <h4>File <cite class=\"filename\">\"/usr/lib/python2.7/site-packages/flask_restful/__init__.py\"</cite>,\n      line <em class=\"line\">480</em>,\n      in <code class=\"function\">wrapper</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>:param resource: The resource as a flask view function</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&quot;&quot;&quot;</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>@wraps(resource)</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>def wrapper(*args, **kwargs):</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>resp = resource(*args, **kwargs)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>return resp</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>data, code, headers = unpack(resp)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>return self.make_response(data, code, headers=headers)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return wrapper</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-43516688\">\n  <h4>File <cite class=\"filename\">\"/usr/lib64/python2.7/site-packages/flask/views.py\"</cite>,\n      line <em class=\"line\">84</em>,\n      in <code class=\"function\">view</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">        </span>The arguments passed to :meth:`as_view` are forwarded to the</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>constructor of the class.</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&quot;&quot;&quot;</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>def view(*args, **kwargs):</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>self = view.view_class(*class_args, **class_kwargs)</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>return self.dispatch_request(*args, **kwargs)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>if cls.decorators:</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>view.__name__ = name</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>view.__module__ = cls.__module__</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>for decorator in cls.decorators:</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-43516944\">\n  <h4>File <cite class=\"filename\">\"/usr/lib/python2.7/site-packages/flask_restful/__init__.py\"</cite>,\n      line <em class=\"line\">595</em>,\n      in <code class=\"function\">dispatch_request</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">            </span>decorators = self.method_decorators</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>for decorator in decorators:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>meth = decorator(meth)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>resp = meth(*args, **kwargs)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>return resp</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>representations = self.representations or OrderedDict()</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-43517008\">\n  <h4>File <cite class=\"filename\">\"/home/user/ideas/local_engine2.py\"</cite>,\n      line <em class=\"line\">368</em>,\n      in <code class=\"function\">get</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">            </span># Final data to send to West Api</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>final_data = {</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>'PredictedClass': str(result),</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>'ExpertMatrix': str(final_expMatrix),</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>'MatchMatrix': str(final_matchMatrix),</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>'Summary': str(summary),</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>'Prompt': str(prompt),</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>'Inbound': str(inbound),</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>'Action': str(action),</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>'NextEscalation': str(nextEscalation),</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>'tEngineRespond': tEngineRespond,</pre></div>\n</div>\n</ul>\n  <blockquote>UnboundLocalError: local variable 'summary' referenced before assignment</blockquote>\n</div>\n\n<div class=\"plain\">\n  <form action=\"/?__debugger__=yes&amp;cmd=paste\" method=\"post\">\n    <p>\n      <input type=\"hidden\" name=\"language\" value=\"pytb\">\n      This is the Copy/Paste friendly version of the traceback.  <span\n      class=\"pastemessage\">You can also paste this traceback into\n      a <a href=\"https://gist.github.com/\">gist</a>:\n      <input type=\"submit\" value=\"create paste\"></span>\n    </p>\n    <textarea cols=\"50\" rows=\"10\" name=\"code\" readonly>Traceback (most recent call last):\n  File &quot;/usr/lib64/python2.7/site-packages/flask/app.py&quot;, line 1997, in __call__\n    return self.wsgi_app(environ, start_response)\n  File &quot;/usr/lib64/python2.7/site-packages/flask/app.py&quot;, line 1985, in wsgi_app\n    response = self.handle_exception(e)\n  File &quot;/usr/lib/python2.7/site-packages/flask_restful/__init__.py&quot;, line 273, in error_router\n    return original_handler(e)\n  File &quot;/usr/lib64/python2.7/site-packages/flask/app.py&quot;, line 1540, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File &quot;/usr/lib/python2.7/site-packages/flask_restful/__init__.py&quot;, line 270, in error_router\n    return self.handle_error(e)\n  File &quot;/usr/lib64/python2.7/site-packages/flask/app.py&quot;, line 1982, in wsgi_app\n    response = self.full_dispatch_request()\n  File &quot;/usr/lib64/python2.7/site-packages/flask/app.py&quot;, line 1614, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File &quot;/usr/lib/python2.7/site-packages/flask_restful/__init__.py&quot;, line 273, in error_router\n    return original_handler(e)\n  File &quot;/usr/lib64/python2.7/site-packages/flask/app.py&quot;, line 1517, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n  File &quot;/usr/lib/python2.7/site-packages/flask_restful/__init__.py&quot;, line 270, in error_router\n    return self.handle_error(e)\n  File &quot;/usr/lib64/python2.7/site-packages/flask/app.py&quot;, line 1612, in full_dispatch_request\n    rv = self.dispatch_request()\n  File &quot;/usr/lib64/python2.7/site-packages/flask/app.py&quot;, line 1598, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File &quot;/usr/lib/python2.7/site-packages/flask_restful/__init__.py&quot;, line 480, in wrapper\n    resp = resource(*args, **kwargs)\n  File &quot;/usr/lib64/python2.7/site-packages/flask/views.py&quot;, line 84, in view\n    return self.dispatch_request(*args, **kwargs)\n  File &quot;/usr/lib/python2.7/site-packages/flask_restful/__init__.py&quot;, line 595, in dispatch_request\n    resp = meth(*args, **kwargs)\n  File &quot;/home/user/ideas/local_engine2.py&quot;, line 368, in get\n    'Summary': str(summary),\nUnboundLocalError: local variable 'summary' referenced before assignment</textarea>\n  </form>\n</div>\n<div class=\"explanation\">\n  The debugger caught an exception in your WSGI application.  You can now\n  look at the traceback which led to the error.  <span class=\"nojavascript\">\n  If you enable JavaScript you can also use additional features such as code\n  execution (if the evalex feature is enabled), automatic pasting of the\n  exceptions and much more.</span>\n</div>\n      <div class=\"footer\">\n        Brought to you by <strong class=\"arthur\">DON'T PANIC</strong>, your\n        friendly Werkzeug powered traceback interpreter.\n      </div>\n    </div>\n\n    <div class=\"pin-prompt\">\n      <div class=\"inner\">\n        <h3>Console Locked</h3>\n        <p>\n          The console is locked and needs to be unlocked by entering the PIN.\n          You can find the PIN printed out on the standard output of your\n          shell that runs the server.\n        <form>\n          <p>PIN:\n            <input type=text name=pin size=14>\n            <input type=submit name=btn value=\"Confirm Pin\">\n        </form>\n      </div>\n    </div>\n  </body>\n</html>\n\n<!--\n\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/site-packages/flask/app.py\", line 1997, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/usr/lib64/python2.7/site-packages/flask/app.py\", line 1985, in wsgi_app\n    response = self.handle_exception(e)\n  File \"/usr/lib/python2.7/site-packages/flask_restful/__init__.py\", line 273, in error_router\n    return original_handler(e)\n  File \"/usr/lib64/python2.7/site-packages/flask/app.py\", line 1540, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/usr/lib/python2.7/site-packages/flask_restful/__init__.py\", line 270, in error_router\n    return self.handle_error(e)\n  File \"/usr/lib64/python2.7/site-packages/flask/app.py\", line 1982, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/usr/lib64/python2.7/site-packages/flask/app.py\", line 1614, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/usr/lib/python2.7/site-packages/flask_restful/__init__.py\", line 273, in error_router\n    return original_handler(e)\n  File \"/usr/lib64/python2.7/site-packages/flask/app.py\", line 1517, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/usr/lib/python2.7/site-packages/flask_restful/__init__.py\", line 270, in error_router\n    return self.handle_error(e)\n  File \"/usr/lib64/python2.7/site-packages/flask/app.py\", line 1612, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/usr/lib64/python2.7/site-packages/flask/app.py\", line 1598, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File \"/usr/lib/python2.7/site-packages/flask_restful/__init__.py\", line 480, in wrapper\n    resp = resource(*args, **kwargs)\n  File \"/usr/lib64/python2.7/site-packages/flask/views.py\", line 84, in view\n    return self.dispatch_request(*args, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/flask_restful/__init__.py\", line 595, in dispatch_request\n    resp = meth(*args, **kwargs)\n  File \"/home/user/ideas/local_engine2.py\", line 368, in get\n    'Summary': str(summary),\nUnboundLocalError: local variable 'summary' referenced before assignment\n\n-->\n"
